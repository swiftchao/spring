<!-- 
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
-->

 <!-- 
        autodetect   如果有默认的构造方法，通过 construct的方式自动装配，否则使用 byType的方式自动装配。
               用于spring2.5 ，spring3.0测试不通过，估计是废弃了。 
 -->
 <!-- 
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">    

    <bean id="helloBean" class="org.chaofei.core.HelloWorld">
        <property name="name" value="ChaoFei" />
    </bean>
    
    <!-- 依赖注入 -->
    <bean id="outputSpringHelper" class="org.chaofei.output.OutputSpringHelper">
        <!-- 这种依赖注入(DI)
        <property name="outputGenerator" ref="csvOutputGenerator" />
         -->
        <property name="outputGenerator" ref="jsonOutputGenerator" />
    </bean>
    
    <bean id="csvOutputGenerator" class="org.chaofei.output.impl.CsvOutputGenerator" />
    <bean id="jsonOutputGenerator" class="org.chaofei.output.impl.JsonOutputGenerator" />

    <!-- 依赖注入 
    <bean id="customer" class="org.chaofei.entity.Customer">
        <property name="person" ref="person" />
    </bean>
    <bean id="person" class="org.chaofei.entity.Person" />
    -->
    <!-- Spring自动装配 beans byName -->
    <bean id="customer" class="org.chaofei.entity.Customer" autowire="byName" />
    <bean id="person" class="org.chaofei.entity.Person" >
        <property name="name" value="QingSong" />
        <property name="age" value="18" />
    </bean>
    
    
    <!-- Spring自动装配 beans byType -->
    <!-- 通常情况下,明确地装配bean -->
    <!-- 
    <bean id="animal" class="org.chaofei.entity.Animal">
        <property name="ability" ref="ability"></property>
    </bean>
    <bean id="ability" class="org.chaofei.entity.Ability">
        <property name="skill" value="Invisible" />
    </bean>
    -->
    <bean id="animal" class="org.chaofei.entity.Animal" autowire="byType" />
    <bean id="ability" class="org.chaofei.entity.Ability">
        <property name="skill" value="Invisible" />
    </bean>
    
    <!-- 按类型多个的话就会报错
     No qualifying bean of type [org.chaofei.entity.Ability] is defined: expected single matching bean but found 3: ability,steal,invisible
    -->
    <!--
    <bean id="animaltest" class="org.chaofei.entity.Animal" autowire="byType" />
    <bean id="steal" class="org.chaofei.entity.Ability">
        <property name="skill" value="Steal" />
    </bean>
    <bean id="invisible" class="org.chaofei.entity.Ability">
        <property name="skill" value="Invisible" />
    </bean>
    -->

    <!-- Spring自动装配 beans 通过构造方法 -->
    <bean id="developer" class="org.chaofei.entity.Developer">
        <constructor-arg>
            <ref bean="language" />
        </constructor-arg>
    </bean>
    <bean id="language" class="org.chaofei.entity.Language">
        <property name="name" value="Java" />
    </bean>
    
    <!--
        Spring通过自动检测自动装配
        AutoDetect – 按构造函数装配
        AutoDetect – 按类型装配
              如果没有找到默认的构造函数，自动检测将按类型选择装配。 
    -->
    <!-- 
        autodetect   如果有默认的构造方法，通过 construct的方式自动装配，否则使用 byType的方式自动装配。
               用于spring2.5 ，spring3.0测试不通过，估计是废弃了。 
    -->
    
    <bean id="panda" class="org.chaofei.entity.Panda" autowire="autodetect" />
    <bean id="kungfu" class="org.chaofei.entity.KungFu">
        <property name="name" value="Tai Ji"></property>
    </bean>
  
        
</beans>

